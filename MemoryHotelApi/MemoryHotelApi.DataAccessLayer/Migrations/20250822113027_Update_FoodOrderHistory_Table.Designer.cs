// <auto-generated />
using System;
using MemoryHotelApi.DataAccessLayer.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MemoryHotelApi.DataAccessLayer.Migrations
{
    [DbContext(typeof(MemoryHotelApiDbContext))]
    [Migration("20250822113027_Update_FoodOrderHistory_Table")]
    partial class Update_FoodOrderHistory_Table
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BranchConvenience", b =>
                {
                    b.Property<Guid>("BranchesWithGeneralConvenienceId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("GeneralConveniencesId")
                        .HasColumnType("char(36)");

                    b.HasKey("BranchesWithGeneralConvenienceId", "GeneralConveniencesId");

                    b.HasIndex("GeneralConveniencesId");

                    b.ToTable("BranchGeneralConveniences", (string)null);
                });

            modelBuilder.Entity("BranchConvenience1", b =>
                {
                    b.Property<Guid>("BranchesWithHighlightedConvenienceId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("HighlightedConveniencesId")
                        .HasColumnType("char(36)");

                    b.HasKey("BranchesWithHighlightedConvenienceId", "HighlightedConveniencesId");

                    b.HasIndex("HighlightedConveniencesId");

                    b.ToTable("BranchHighlightedConveniences", (string)null);
                });

            modelBuilder.Entity("BranchRoomCategory", b =>
                {
                    b.Property<Guid>("BranchesId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RoomCategoriesId")
                        .HasColumnType("char(36)");

                    b.HasKey("BranchesId", "RoomCategoriesId");

                    b.HasIndex("RoomCategoriesId");

                    b.ToTable("BranchRoomCategory");
                });

            modelBuilder.Entity("ConvenienceRoom", b =>
                {
                    b.Property<Guid>("ConveniencesId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RoomsId")
                        .HasColumnType("char(36)");

                    b.HasKey("ConveniencesId", "RoomsId");

                    b.HasIndex("RoomsId");

                    b.ToTable("ConvenienceRoom");
                });

            modelBuilder.Entity("ImageRoom", b =>
                {
                    b.Property<Guid>("ImagesId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RoomsId")
                        .HasColumnType("char(36)");

                    b.HasKey("ImagesId", "RoomsId");

                    b.HasIndex("RoomsId");

                    b.ToTable("ImageRoom");
                });

            modelBuilder.Entity("ImageSubTour", b =>
                {
                    b.Property<Guid>("ImagesId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SubToursId")
                        .HasColumnType("char(36)");

                    b.HasKey("ImagesId", "SubToursId");

                    b.HasIndex("SubToursId");

                    b.ToTable("ImageSubTour");
                });

            modelBuilder.Entity("ImageTour", b =>
                {
                    b.Property<Guid>("ImagesId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ToursId")
                        .HasColumnType("char(36)");

                    b.HasKey("ImagesId", "ToursId");

                    b.HasIndex("ToursId");

                    b.ToTable("ImageTour");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.Banner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Link")
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Banners");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.Blog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPopular")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("MinutesToRead")
                        .HasColumnType("double");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.BlogHashTag", b =>
                {
                    b.Property<Guid>("BlogId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("HashtagId")
                        .HasColumnType("char(36)");

                    b.HasKey("BlogId", "HashtagId");

                    b.HasIndex("HashtagId");

                    b.ToTable("BlogHashtags");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.Branch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BranchLocation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HotLine")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HotelCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LocationHighlights")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SuitableFor")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.BranchImage", b =>
                {
                    b.Property<Guid>("BranchId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("BranchId", "ImageId");

                    b.HasIndex("ImageId");

                    b.ToTable("BranchImage");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.BranchReceptionist", b =>
                {
                    b.Property<Guid>("BranchId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("BranchId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("BranchReceptionists");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RegionKey")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.Convenience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Conveniences");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.Food", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsBestSeller")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("SubFoodCategoryId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("WaitingTimeInMinute")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubFoodCategoryId");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.FoodCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("FoodCategories");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.FoodOrderHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("BranchId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerPhone")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("OrderCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("FoodOrderHistories");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.FoodOrderHistoryDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<Guid>("FoodId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("FoodOrderHistoryId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("FoodId");

                    b.HasIndex("FoodOrderHistoryId");

                    b.ToTable("FoodOrderHistoryDetails");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.Hashtag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Hashtags");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.LocationExplore", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("BranchId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Distance")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("LocationExplores");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.MembershipTier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleteAllowed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("MembershipTiers");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.MembershipTierBenefit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Benefit")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("MembershipTierBenefits");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.MembershipTierMembershipTierBenefit", b =>
                {
                    b.Property<Guid>("MembershipTierId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MembershipTierBenefitId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("MembershipTierId", "MembershipTierBenefitId");

                    b.HasIndex("MembershipTierBenefitId");

                    b.ToTable("MembershipTierMembershipTierBenefits");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<double>("Area")
                        .HasColumnType("double");

                    b.Property<string>("BedType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("BranchId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("RoomCategoryId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("RoomCategoryId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.RoomCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("RoomCategories");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.Story", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Link")
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Stories");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.SubFoodCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<Guid>("FoodCategoryId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("FoodCategoryId");

                    b.ToTable("SubFoodCategories");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.SubTour", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DepartureTime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("TourId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Transportation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TravelSchedule")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("TourId");

                    b.ToTable("SubTours");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.Tour", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CityId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SubTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeletedAllowed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("MembershipTierId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nationality")
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("MembershipTierId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BranchConvenience", b =>
                {
                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.Branch", null)
                        .WithMany()
                        .HasForeignKey("BranchesWithGeneralConvenienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.Convenience", null)
                        .WithMany()
                        .HasForeignKey("GeneralConveniencesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BranchConvenience1", b =>
                {
                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.Branch", null)
                        .WithMany()
                        .HasForeignKey("BranchesWithHighlightedConvenienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.Convenience", null)
                        .WithMany()
                        .HasForeignKey("HighlightedConveniencesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BranchRoomCategory", b =>
                {
                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.Branch", null)
                        .WithMany()
                        .HasForeignKey("BranchesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.RoomCategory", null)
                        .WithMany()
                        .HasForeignKey("RoomCategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConvenienceRoom", b =>
                {
                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.Convenience", null)
                        .WithMany()
                        .HasForeignKey("ConveniencesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.Room", null)
                        .WithMany()
                        .HasForeignKey("RoomsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ImageRoom", b =>
                {
                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.Image", null)
                        .WithMany()
                        .HasForeignKey("ImagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.Room", null)
                        .WithMany()
                        .HasForeignKey("RoomsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ImageSubTour", b =>
                {
                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.Image", null)
                        .WithMany()
                        .HasForeignKey("ImagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.SubTour", null)
                        .WithMany()
                        .HasForeignKey("SubToursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ImageTour", b =>
                {
                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.Image", null)
                        .WithMany()
                        .HasForeignKey("ImagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.Tour", null)
                        .WithMany()
                        .HasForeignKey("ToursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.Blog", b =>
                {
                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.BlogHashTag", b =>
                {
                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.Blog", "Blog")
                        .WithMany("BlogHashtags")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.Hashtag", "Hashtag")
                        .WithMany("BlogHashtags")
                        .HasForeignKey("HashtagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");

                    b.Navigation("Hashtag");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.BranchImage", b =>
                {
                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.Branch", "Branch")
                        .WithMany("BranchImages")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.Image", "Image")
                        .WithMany("BranchImages")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.BranchReceptionist", b =>
                {
                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.Branch", "Branch")
                        .WithMany("BranchReceptionists")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.User", "User")
                        .WithMany("BranchReceptionists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.Food", b =>
                {
                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.SubFoodCategory", "SubFoodCategory")
                        .WithMany("Foods")
                        .HasForeignKey("SubFoodCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubFoodCategory");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.FoodOrderHistory", b =>
                {
                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.Branch", "Branch")
                        .WithMany("FoodOrderHistories")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.FoodOrderHistoryDetail", b =>
                {
                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.Food", "Food")
                        .WithMany("FoodOrderHistoryDetails")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.FoodOrderHistory", "FoodOrderHistory")
                        .WithMany("Items")
                        .HasForeignKey("FoodOrderHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("FoodOrderHistory");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.LocationExplore", b =>
                {
                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.Branch", "Branch")
                        .WithMany("LocationExplores")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.MembershipTierMembershipTierBenefit", b =>
                {
                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.MembershipTierBenefit", "MembershipTierBenefit")
                        .WithMany("Tiers")
                        .HasForeignKey("MembershipTierBenefitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.MembershipTier", "MembershipTier")
                        .WithMany("Benefits")
                        .HasForeignKey("MembershipTierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MembershipTier");

                    b.Navigation("MembershipTierBenefit");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.Room", b =>
                {
                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.Branch", "Branch")
                        .WithMany("Rooms")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.RoomCategory", "RoomCategory")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("RoomCategory");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.SubFoodCategory", b =>
                {
                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.FoodCategory", "FoodCategory")
                        .WithMany("SubFoodCategories")
                        .HasForeignKey("FoodCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FoodCategory");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.SubTour", b =>
                {
                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.Tour", "Tour")
                        .WithMany("SubTours")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.Tour", b =>
                {
                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.City", "City")
                        .WithMany("Tours")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.User", b =>
                {
                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.MembershipTier", "MembershipTier")
                        .WithMany()
                        .HasForeignKey("MembershipTierId");

                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MembershipTier");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.Blog", b =>
                {
                    b.Navigation("BlogHashtags");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.Branch", b =>
                {
                    b.Navigation("BranchImages");

                    b.Navigation("BranchReceptionists");

                    b.Navigation("FoodOrderHistories");

                    b.Navigation("LocationExplores");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.City", b =>
                {
                    b.Navigation("Tours");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.Food", b =>
                {
                    b.Navigation("FoodOrderHistoryDetails");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.FoodCategory", b =>
                {
                    b.Navigation("SubFoodCategories");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.FoodOrderHistory", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.Hashtag", b =>
                {
                    b.Navigation("BlogHashtags");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.Image", b =>
                {
                    b.Navigation("BranchImages");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.MembershipTier", b =>
                {
                    b.Navigation("Benefits");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.MembershipTierBenefit", b =>
                {
                    b.Navigation("Tiers");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.RoomCategory", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.SubFoodCategory", b =>
                {
                    b.Navigation("Foods");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.Tour", b =>
                {
                    b.Navigation("SubTours");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.User", b =>
                {
                    b.Navigation("BranchReceptionists");
                });
#pragma warning restore 612, 618
        }
    }
}
