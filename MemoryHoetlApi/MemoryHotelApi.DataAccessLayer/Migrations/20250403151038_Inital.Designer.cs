// <auto-generated />
using System;
using MemoryHotelApi.DataAccessLayer.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MemoryHotelApi.DataAccessLayer.Migrations
{
    [DbContext(typeof(MemoryHotelApiDbContext))]
    [Migration("20250403151038_Inital")]
    partial class Inital
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b1860226-3a78-4b5e-a332-fae52b3b7e4d"),
                            CreatedDate = new DateTime(2025, 4, 3, 15, 10, 38, 56, DateTimeKind.Utc).AddTicks(5094),
                            Description = "Admin role",
                            IsDeleted = false,
                            Name = "Admin",
                            UpdatedDate = new DateTime(2025, 4, 3, 15, 10, 38, 56, DateTimeKind.Utc).AddTicks(5096)
                        },
                        new
                        {
                            Id = new Guid("f0263e28-97d6-48eb-9b7a-ebd9b383a7e7"),
                            CreatedDate = new DateTime(2025, 4, 3, 15, 10, 38, 56, DateTimeKind.Utc).AddTicks(5099),
                            Description = "User role",
                            IsDeleted = false,
                            Name = "User",
                            UpdatedDate = new DateTime(2025, 4, 3, 15, 10, 38, 56, DateTimeKind.Utc).AddTicks(5100)
                        });
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4d3bc8ac-3cc5-49dc-b526-7cce24d79c5e"),
                            CreatedDate = new DateTime(2025, 4, 3, 15, 10, 38, 56, DateTimeKind.Utc).AddTicks(3186),
                            Email = "admin@1234",
                            FullName = "Admin",
                            IsDeleted = false,
                            Password = "$2a$12$4UzizvZsV3N560sv3.VX9Otmjqx9VYCn7LzCxeZZm0s4N01/y92Ni",
                            Phone = "0123456789",
                            RoleId = new Guid("b1860226-3a78-4b5e-a332-fae52b3b7e4d"),
                            UpdatedDate = new DateTime(2025, 4, 3, 15, 10, 38, 56, DateTimeKind.Utc).AddTicks(3189)
                        },
                        new
                        {
                            Id = new Guid("036aa9ee-c2a9-4225-90a3-d4fba9d6b368"),
                            CreatedDate = new DateTime(2025, 4, 3, 15, 10, 38, 56, DateTimeKind.Utc).AddTicks(3194),
                            Email = "user@1234",
                            FullName = "User",
                            IsDeleted = false,
                            Password = "$2a$12$4UzizvZsV3N560sv3.VX9Otmjqx9VYCn7LzCxeZZm0s4N01/y92Ni",
                            Phone = "0123456789",
                            RoleId = new Guid("f0263e28-97d6-48eb-9b7a-ebd9b383a7e7"),
                            UpdatedDate = new DateTime(2025, 4, 3, 15, 10, 38, 56, DateTimeKind.Utc).AddTicks(3195)
                        });
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.User", b =>
                {
                    b.HasOne("MemoryHotelApi.DataAccessLayer.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MemoryHotelApi.DataAccessLayer.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
